/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API. 
 *
 * The version of the OpenAPI document: 32.0.2
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.segment.publicapi.api;

import com.segment.publicapi.ApiException;
import com.segment.publicapi.models.GetDestinationMetadata200Response;
import com.segment.publicapi.models.GetDestinationsCatalog200Response;
import com.segment.publicapi.models.GetSourceMetadata200Response;
import com.segment.publicapi.models.GetSourcesCatalog200Response;
import com.segment.publicapi.models.GetWarehouseMetadata200Response;
import com.segment.publicapi.models.GetWarehousesCatalog200Response;
import com.segment.publicapi.models.PaginationInput;
import com.segment.publicapi.models.RequestErrorEnvelope;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CatalogApi
 */
@Disabled
public class CatalogApiTest {

    private final CatalogApi api = new CatalogApi();

    /**
     * Get Destination Metadata
     *
     * Returns a Destination catalog item by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDestinationMetadataTest() throws ApiException {
        String destinationMetadataId = null;
        GetDestinationMetadata200Response response = api.getDestinationMetadata(destinationMetadataId);
        // TODO: test validations
    }

    /**
     * Get Destinations Catalog
     *
     * Returns a list of all available Destinations in the Segment catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDestinationsCatalogTest() throws ApiException {
        PaginationInput pagination = null;
        GetDestinationsCatalog200Response response = api.getDestinationsCatalog(pagination);
        // TODO: test validations
    }

    /**
     * Get Source Metadata
     *
     * Returns a Source catalog item by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSourceMetadataTest() throws ApiException {
        String sourceMetadataId = null;
        GetSourceMetadata200Response response = api.getSourceMetadata(sourceMetadataId);
        // TODO: test validations
    }

    /**
     * Get Sources Catalog
     *
     * Returns a list of all available Sources in the Segment catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSourcesCatalogTest() throws ApiException {
        PaginationInput pagination = null;
        GetSourcesCatalog200Response response = api.getSourcesCatalog(pagination);
        // TODO: test validations
    }

    /**
     * Get Warehouse Metadata
     *
     * Returns a Warehouse catalog item by its id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWarehouseMetadataTest() throws ApiException {
        String warehouseMetadataId = null;
        GetWarehouseMetadata200Response response = api.getWarehouseMetadata(warehouseMetadataId);
        // TODO: test validations
    }

    /**
     * Get Warehouses Catalog
     *
     * Returns a list of all available Warehouses in the Segment catalog.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWarehousesCatalogTest() throws ApiException {
        PaginationInput pagination = null;
        GetWarehousesCatalog200Response response = api.getWarehousesCatalog(pagination);
        // TODO: test validations
    }

}
