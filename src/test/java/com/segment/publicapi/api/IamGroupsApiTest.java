/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API. 
 *
 * The version of the OpenAPI document: 32.0.2
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.segment.publicapi.api;

import com.segment.publicapi.ApiException;
import com.segment.publicapi.models.AddPermissionsToUserGroup200Response;
import com.segment.publicapi.models.AddPermissionsToUserGroupV1Input;
import com.segment.publicapi.models.AddUsersToUserGroup200Response;
import com.segment.publicapi.models.AddUsersToUserGroupV1Input;
import com.segment.publicapi.models.CreateUserGroup200Response;
import com.segment.publicapi.models.CreateUserGroupV1Input;
import com.segment.publicapi.models.DeleteUserGroup200Response;
import com.segment.publicapi.models.GetUserGroup200Response;
import com.segment.publicapi.models.ListInvitesFromUserGroup200Response;
import com.segment.publicapi.models.ListUserGroups200Response;
import com.segment.publicapi.models.ListUsersFromUserGroup200Response;
import com.segment.publicapi.models.PaginationInput;
import com.segment.publicapi.models.RemoveUsersFromUserGroup200Response;
import com.segment.publicapi.models.ReplacePermissionsForUserGroup200Response;
import com.segment.publicapi.models.ReplacePermissionsForUserGroupV1Input;
import com.segment.publicapi.models.ReplaceUsersInUserGroup200Response;
import com.segment.publicapi.models.ReplaceUsersInUserGroupV1Input;
import com.segment.publicapi.models.RequestErrorEnvelope;
import com.segment.publicapi.models.UpdateUserGroup200Response;
import com.segment.publicapi.models.UpdateUserGroupV1Input;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IamGroupsApi
 */
@Disabled
public class IamGroupsApiTest {

    private final IamGroupsApi api = new IamGroupsApi();

    /**
     * Add Permissions to User Group
     *
     * Adds a list of access permissions to a user group.  When called, this endpoint may generate one or more of the following [Audit Trail](/tag/Audit-Trail) events: * Policy Created * User Group Policy Updated          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPermissionsToUserGroupTest() throws ApiException {
        String userGroupId = null;
        AddPermissionsToUserGroupV1Input addPermissionsToUserGroupV1Input = null;
        AddPermissionsToUserGroup200Response response = api.addPermissionsToUserGroup(userGroupId, addPermissionsToUserGroupV1Input);
        // TODO: test validations
    }

    /**
     * Add Users to User Group
     *
     * Adds a list of users or invites to a user group.  When called, this endpoint may generate one or more of the following [Audit Trail](/tag/Audit-Trail) events: * Subjects Added to Group * User Added To User Group          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUsersToUserGroupTest() throws ApiException {
        String userGroupId = null;
        AddUsersToUserGroupV1Input addUsersToUserGroupV1Input = null;
        AddUsersToUserGroup200Response response = api.addUsersToUserGroup(userGroupId, addUsersToUserGroupV1Input);
        // TODO: test validations
    }

    /**
     * Create User Group
     *
     * Creates a user group.  When called, this endpoint may generate one or more of the following [Audit Trail](/tag/Audit-Trail) events: * User Group Created * Policy Created          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserGroupTest() throws ApiException {
        CreateUserGroupV1Input createUserGroupV1Input = null;
        CreateUserGroup200Response response = api.createUserGroup(createUserGroupV1Input);
        // TODO: test validations
    }

    /**
     * Delete User Group
     *
     * Removes a user group from a Workspace.    When called, this endpoint may generate the &#x60;User Group Deleted&#x60; [Audit Trail](/tag/Audit-Trail) event.          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserGroupTest() throws ApiException {
        String userGroupId = null;
        DeleteUserGroup200Response response = api.deleteUserGroup(userGroupId);
        // TODO: test validations
    }

    /**
     * Get User Group
     *
     * Returns a user group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserGroupTest() throws ApiException {
        String userGroupId = null;
        GetUserGroup200Response response = api.getUserGroup(userGroupId);
        // TODO: test validations
    }

    /**
     * List Invites from User Group
     *
     * Returns the emails of invitees to a user group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInvitesFromUserGroupTest() throws ApiException {
        String userGroupId = null;
        PaginationInput pagination = null;
        ListInvitesFromUserGroup200Response response = api.listInvitesFromUserGroup(userGroupId, pagination);
        // TODO: test validations
    }

    /**
     * List User Groups
     *
     * Returns all user groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUserGroupsTest() throws ApiException {
        PaginationInput pagination = null;
        ListUserGroups200Response response = api.listUserGroups(pagination);
        // TODO: test validations
    }

    /**
     * List Users from User Group
     *
     * Returns users belonging to a user group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUsersFromUserGroupTest() throws ApiException {
        String userGroupId = null;
        PaginationInput pagination = null;
        ListUsersFromUserGroup200Response response = api.listUsersFromUserGroup(userGroupId, pagination);
        // TODO: test validations
    }

    /**
     * Remove Users from User Group
     *
     * Removes one or multiple users or invites from a user group by email.  When called, this endpoint may generate one or more of the following [Audit Trail](/tag/Audit-Trail) events: * Group Memberships Deleted * User Removed From User Group          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUsersFromUserGroupTest() throws ApiException {
        String userGroupId = null;
        List<String> emails = null;
        RemoveUsersFromUserGroup200Response response = api.removeUsersFromUserGroup(userGroupId, emails);
        // TODO: test validations
    }

    /**
     * Replace Permissions for User Group
     *
     * Updates the list of access permissions for a user group.    When called, this endpoint may generate the &#x60;Policy Deleted&#x60; [Audit Trail](/tag/Audit-Trail) event.          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replacePermissionsForUserGroupTest() throws ApiException {
        String userGroupId = null;
        ReplacePermissionsForUserGroupV1Input replacePermissionsForUserGroupV1Input = null;
        ReplacePermissionsForUserGroup200Response response = api.replacePermissionsForUserGroup(userGroupId, replacePermissionsForUserGroupV1Input);
        // TODO: test validations
    }

    /**
     * Replace Users in User Group
     *
     * Replaces the members of a user group by email.  When called, this endpoint may generate one or more of the following [Audit Trail](/tag/Audit-Trail) events: * Subjects Added to Group * User Added To User Group * Group Memberships Deleted          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceUsersInUserGroupTest() throws ApiException {
        String userGroupId = null;
        ReplaceUsersInUserGroupV1Input replaceUsersInUserGroupV1Input = null;
        ReplaceUsersInUserGroup200Response response = api.replaceUsersInUserGroup(userGroupId, replaceUsersInUserGroupV1Input);
        // TODO: test validations
    }

    /**
     * Update User Group
     *
     * Updates a user group for a Workspace.    When called, this endpoint may generate the &#x60;User Group Updated&#x60; [Audit Trail](/tag/Audit-Trail) event.          The rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserGroupTest() throws ApiException {
        String userGroupId = null;
        UpdateUserGroupV1Input updateUserGroupV1Input = null;
        UpdateUserGroup200Response response = api.updateUserGroup(userGroupId, updateUserGroupV1Input);
        // TODO: test validations
    }

}
