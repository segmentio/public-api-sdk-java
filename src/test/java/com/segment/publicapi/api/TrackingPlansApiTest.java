/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API. 
 *
 * The version of the OpenAPI document: 32.0.2
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.segment.publicapi.api;

import com.segment.publicapi.ApiException;
import com.segment.publicapi.models.AddSourceToTrackingPlan200Response;
import com.segment.publicapi.models.AddSourceToTrackingPlanV1Input;
import com.segment.publicapi.models.CreateTrackingPlan200Response;
import com.segment.publicapi.models.CreateTrackingPlanV1Input;
import com.segment.publicapi.models.DeleteTrackingPlan200Response;
import com.segment.publicapi.models.GetTrackingPlan200Response;
import com.segment.publicapi.models.ListRulesFromTrackingPlan200Response;
import com.segment.publicapi.models.ListSourcesFromTrackingPlan200Response;
import com.segment.publicapi.models.ListTrackingPlans200Response;
import com.segment.publicapi.models.PaginationInput;
import com.segment.publicapi.models.RemoveRuleV1;
import com.segment.publicapi.models.RemoveRulesFromTrackingPlan200Response;
import com.segment.publicapi.models.RemoveSourceFromTrackingPlan200Response;
import com.segment.publicapi.models.ReplaceRulesInTrackingPlan200Response;
import com.segment.publicapi.models.ReplaceRulesInTrackingPlanV1Input;
import com.segment.publicapi.models.RequestErrorEnvelope;
import com.segment.publicapi.models.UpdateRulesInTrackingPlan200Response;
import com.segment.publicapi.models.UpdateRulesInTrackingPlanV1Input;
import com.segment.publicapi.models.UpdateTrackingPlan200Response;
import com.segment.publicapi.models.UpdateTrackingPlanV1Input;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrackingPlansApi
 */
@Disabled
public class TrackingPlansApiTest {

    private final TrackingPlansApi api = new TrackingPlansApi();

    /**
     * Add Source to Tracking Plan
     *
     * Connects a Source to a Tracking Plan.    When called, this endpoint may generate the &#x60;Source Modified&#x60; [Audit Trail](/tag/Audit-Trail) event. **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSourceToTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        AddSourceToTrackingPlanV1Input addSourceToTrackingPlanV1Input = null;
        AddSourceToTrackingPlan200Response response = api.addSourceToTrackingPlan(trackingPlanId, addSourceToTrackingPlanV1Input);
        // TODO: test validations
    }

    /**
     * Create Tracking Plan
     *
     * Creates a Tracking Plan.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTrackingPlanTest() throws ApiException {
        CreateTrackingPlanV1Input createTrackingPlanV1Input = null;
        CreateTrackingPlan200Response response = api.createTrackingPlan(createTrackingPlanV1Input);
        // TODO: test validations
    }

    /**
     * Delete Tracking Plan
     *
     * Deletes a Tracking Plan.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        DeleteTrackingPlan200Response response = api.deleteTrackingPlan(trackingPlanId);
        // TODO: test validations
    }

    /**
     * Get Tracking Plan
     *
     * Returns a Tracking Plan.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        GetTrackingPlan200Response response = api.getTrackingPlan(trackingPlanId);
        // TODO: test validations
    }

    /**
     * List Rules from Tracking Plan
     *
     * Lists Tracking Plan rules.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.   The rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRulesFromTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        PaginationInput pagination = null;
        ListRulesFromTrackingPlan200Response response = api.listRulesFromTrackingPlan(trackingPlanId, pagination);
        // TODO: test validations
    }

    /**
     * List Sources from Tracking Plan
     *
     * Lists Sources connected to a Tracking Plan.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.   This endpoint requires the user to have at least the following permission(s):   * Source Read-only  * Tracking Plan Read-only
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSourcesFromTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        PaginationInput pagination = null;
        ListSourcesFromTrackingPlan200Response response = api.listSourcesFromTrackingPlan(trackingPlanId, pagination);
        // TODO: test validations
    }

    /**
     * List Tracking Plans
     *
     * Returns a list of Tracking Plans.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTrackingPlansTest() throws ApiException {
        PaginationInput pagination = null;
        String type = null;
        ListTrackingPlans200Response response = api.listTrackingPlans(pagination, type);
        // TODO: test validations
    }

    /**
     * Remove Rules from Tracking Plan
     *
     * Deletes Tracking Plan rules.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeRulesFromTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        List<RemoveRuleV1> rules = null;
        RemoveRulesFromTrackingPlan200Response response = api.removeRulesFromTrackingPlan(trackingPlanId, rules);
        // TODO: test validations
    }

    /**
     * Remove Source from Tracking Plan
     *
     * Disconnects a Source from a Tracking Plan.    When called, this endpoint may generate the &#x60;Source Modified&#x60; [Audit Trail](/tag/Audit-Trail) event. **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeSourceFromTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        String sourceId = null;
        RemoveSourceFromTrackingPlan200Response response = api.removeSourceFromTrackingPlan(trackingPlanId, sourceId);
        // TODO: test validations
    }

    /**
     * Replace Rules in Tracking Plan
     *
     * Replaces Tracking Plan rules.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceRulesInTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        ReplaceRulesInTrackingPlanV1Input replaceRulesInTrackingPlanV1Input = null;
        ReplaceRulesInTrackingPlan200Response response = api.replaceRulesInTrackingPlan(trackingPlanId, replaceRulesInTrackingPlanV1Input);
        // TODO: test validations
    }

    /**
     * Update Rules in Tracking Plan
     *
     * Updates Tracking Plan rules.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRulesInTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        UpdateRulesInTrackingPlanV1Input updateRulesInTrackingPlanV1Input = null;
        UpdateRulesInTrackingPlan200Response response = api.updateRulesInTrackingPlan(trackingPlanId, updateRulesInTrackingPlanV1Input);
        // TODO: test validations
    }

    /**
     * Update Tracking Plan
     *
     * Updates a Tracking Plan.  **Note**: In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.  Config API omitted fields: - &#x60;updateMask&#x60;       
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTrackingPlanTest() throws ApiException {
        String trackingPlanId = null;
        UpdateTrackingPlanV1Input updateTrackingPlanV1Input = null;
        UpdateTrackingPlan200Response response = api.updateTrackingPlan(trackingPlanId, updateTrackingPlanV1Input);
        // TODO: test validations
    }

}
