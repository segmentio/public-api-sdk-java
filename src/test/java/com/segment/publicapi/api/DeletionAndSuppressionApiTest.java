/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API. 
 *
 * The version of the OpenAPI document: 32.0.2
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.segment.publicapi.api;

import com.segment.publicapi.ApiException;
import com.segment.publicapi.models.CreateCloudSourceRegulation200Response;
import com.segment.publicapi.models.CreateCloudSourceRegulationV1Input;
import com.segment.publicapi.models.CreateSourceRegulation200Response;
import com.segment.publicapi.models.CreateSourceRegulationV1Input;
import com.segment.publicapi.models.CreateWorkspaceRegulation200Response;
import com.segment.publicapi.models.CreateWorkspaceRegulationV1Input;
import com.segment.publicapi.models.DeleteRegulation200Response;
import com.segment.publicapi.models.GetRegulation200Response;
import com.segment.publicapi.models.ListRegulationsFromSource200Response;
import com.segment.publicapi.models.ListSuppressions200Response;
import com.segment.publicapi.models.ListWorkspaceRegulations200Response;
import com.segment.publicapi.models.PaginationInput;
import com.segment.publicapi.models.RequestErrorEnvelope;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeletionAndSuppressionApi
 */
@Disabled
public class DeletionAndSuppressionApiTest {

    private final DeletionAndSuppressionApi api = new DeletionAndSuppressionApi();

    /**
     * Create Cloud Source Regulation
     *
     * Creates a Source-scoped regulation.        Config API omitted fields: - &#x60;attributes&#x60;, - &#x60;userAgent&#x60;       
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCloudSourceRegulationTest() throws ApiException {
        String sourceId = null;
        CreateCloudSourceRegulationV1Input createCloudSourceRegulationV1Input = null;
        CreateCloudSourceRegulation200Response response = api.createCloudSourceRegulation(sourceId, createCloudSourceRegulationV1Input);
        // TODO: test validations
    }

    /**
     * Create Source Regulation
     *
     * Creates a Source-scoped regulation.    When called, this endpoint may generate the &#x60;Source Regulation Created&#x60; [Audit Trail](/tag/Audit-Trail) event.  Config API omitted fields: - &#x60;attributes&#x60;, - &#x60;userAgent&#x60;       
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSourceRegulationTest() throws ApiException {
        String sourceId = null;
        CreateSourceRegulationV1Input createSourceRegulationV1Input = null;
        CreateSourceRegulation200Response response = api.createSourceRegulation(sourceId, createSourceRegulationV1Input);
        // TODO: test validations
    }

    /**
     * Create Workspace Regulation
     *
     * Creates a Workspace-scoped regulation.    When called, this endpoint may generate the &#x60;Workspace Regulation Created&#x60; [Audit Trail](/tag/Audit-Trail) event.  Config API omitted fields: - &#x60;attributes&#x60;, - &#x60;userAgent&#x60;       
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkspaceRegulationTest() throws ApiException {
        CreateWorkspaceRegulationV1Input createWorkspaceRegulationV1Input = null;
        CreateWorkspaceRegulation200Response response = api.createWorkspaceRegulation(createWorkspaceRegulationV1Input);
        // TODO: test validations
    }

    /**
     * Delete Regulation
     *
     * Deletes a regulation from the Workspace. The regulation must be in the initialized state to be deleted.    When called, this endpoint may generate the &#x60;Regulation Deleted&#x60; [Audit Trail](/tag/Audit-Trail) event.       
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRegulationTest() throws ApiException {
        String regulateId = null;
        DeleteRegulation200Response response = api.deleteRegulation(regulateId);
        // TODO: test validations
    }

    /**
     * Get Regulation
     *
     * Gets a regulation from the Workspace.        Config API omitted fields: - &#x60;parent&#x60;       
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegulationTest() throws ApiException {
        String regulateId = null;
        GetRegulation200Response response = api.getRegulation(regulateId);
        // TODO: test validations
    }

    /**
     * List Regulations from Source
     *
     * Lists all Source-scoped regulations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRegulationsFromSourceTest() throws ApiException {
        String sourceId = null;
        PaginationInput pagination = null;
        String status = null;
        List<String> regulationTypes = null;
        ListRegulationsFromSource200Response response = api.listRegulationsFromSource(sourceId, pagination, status, regulationTypes);
        // TODO: test validations
    }

    /**
     * List Suppressions
     *
     * Lists all suppressions in a given Workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSuppressionsTest() throws ApiException {
        PaginationInput pagination = null;
        ListSuppressions200Response response = api.listSuppressions(pagination);
        // TODO: test validations
    }

    /**
     * List Workspace Regulations
     *
     * Lists all Workspace-scoped regulations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkspaceRegulationsTest() throws ApiException {
        PaginationInput pagination = null;
        String status = null;
        List<String> regulationTypes = null;
        ListWorkspaceRegulations200Response response = api.listWorkspaceRegulations(pagination, status, regulationTypes);
        // TODO: test validations
    }

}
