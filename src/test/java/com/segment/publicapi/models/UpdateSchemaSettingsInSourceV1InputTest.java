/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API. 
 *
 * The version of the OpenAPI document: 32.0.2
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.segment.publicapi.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.segment.publicapi.models.Group;
import com.segment.publicapi.models.Identify;
import com.segment.publicapi.models.Track;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for UpdateSchemaSettingsInSourceV1Input
 */
public class UpdateSchemaSettingsInSourceV1InputTest {
    private final UpdateSchemaSettingsInSourceV1Input model = new UpdateSchemaSettingsInSourceV1Input();

    /**
     * Model tests for UpdateSchemaSettingsInSourceV1Input
     */
    @Test
    public void testUpdateSchemaSettingsInSourceV1Input() {
        // TODO: test UpdateSchemaSettingsInSourceV1Input
    }

    /**
     * Test the property 'track'
     */
    @Test
    public void trackTest() {
        // TODO: test track
    }

    /**
     * Test the property 'identify'
     */
    @Test
    public void identifyTest() {
        // TODO: test identify
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'forwardingViolationsTo'
     */
    @Test
    public void forwardingViolationsToTest() {
        // TODO: test forwardingViolationsTo
    }

    /**
     * Test the property 'forwardingBlockedEventsTo'
     */
    @Test
    public void forwardingBlockedEventsToTest() {
        // TODO: test forwardingBlockedEventsTo
    }

}
