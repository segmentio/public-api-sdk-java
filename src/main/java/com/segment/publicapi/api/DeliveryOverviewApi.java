/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.segment.publicapi.api;

import com.google.gson.reflect.TypeToken;
import com.segment.publicapi.ApiCallback;
import com.segment.publicapi.ApiClient;
import com.segment.publicapi.ApiException;
import com.segment.publicapi.ApiResponse;
import com.segment.publicapi.Configuration;
import com.segment.publicapi.Pair;
import com.segment.publicapi.models.DeliveryOverviewFilterBy;
import com.segment.publicapi.models.GetEgressFailedMetricsFromDeliveryOverview200Response;
import com.segment.publicapi.models.PaginationInput;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DeliveryOverviewApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DeliveryOverviewApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DeliveryOverviewApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getEgressFailedMetricsFromDeliveryOverview
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getEgressFailedMetricsFromDeliveryOverviewCall(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/delivery-overview/failed-delivery";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceId", sourceId));
        }

        if (destinationConfigId != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("destinationConfigId", destinationConfigId));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endTime", endTime));
        }

        if (groupBy != null) {
            localVarCollectionQueryParams.addAll(
                    localVarApiClient.parameterToPairs("multi", "groupBy", groupBy));
        }

        if (granularity != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("granularity", granularity));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        if (subscriptionId != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("subscriptionId", subscriptionId));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1beta+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEgressFailedMetricsFromDeliveryOverviewValidateBeforeCall(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'sourceId' is set
        if (sourceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'sourceId' when calling"
                            + " getEgressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'destinationConfigId' is set
        if (destinationConfigId == null) {
            throw new ApiException(
                    "Missing the required parameter 'destinationConfigId' when calling"
                            + " getEgressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'startTime' when calling"
                            + " getEgressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'endTime' when calling"
                            + " getEgressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'granularity' is set
        if (granularity == null) {
            throw new ApiException(
                    "Missing the required parameter 'granularity' when calling"
                            + " getEgressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " getEgressFailedMetricsFromDeliveryOverview(Async)");
        }

        return getEgressFailedMetricsFromDeliveryOverviewCall(
                sourceId,
                destinationConfigId,
                startTime,
                endTime,
                groupBy,
                granularity,
                filter,
                pagination,
                subscriptionId,
                _callback);
    }

    /**
     * Get Egress Failed Metrics from Delivery Overview Get events that failed to be delivered to
     * Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @return GetEgressFailedMetricsFromDeliveryOverview200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetEgressFailedMetricsFromDeliveryOverview200Response
            getEgressFailedMetricsFromDeliveryOverview(
                    String sourceId,
                    String destinationConfigId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination,
                    String subscriptionId)
                    throws ApiException {
        ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response> localVarResp =
                getEgressFailedMetricsFromDeliveryOverviewWithHttpInfo(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId);
        return localVarResp.getData();
    }

    /**
     * Get Egress Failed Metrics from Delivery Overview Get events that failed to be delivered to
     * Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @return ApiResponse&lt;GetEgressFailedMetricsFromDeliveryOverview200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response>
            getEgressFailedMetricsFromDeliveryOverviewWithHttpInfo(
                    String sourceId,
                    String destinationConfigId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination,
                    String subscriptionId)
                    throws ApiException {
        okhttp3.Call localVarCall =
                getEgressFailedMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId,
                        null);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Egress Failed Metrics from Delivery Overview (asynchronously) Get events that failed to
     * be delivered to Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getEgressFailedMetricsFromDeliveryOverviewAsync(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback<GetEgressFailedMetricsFromDeliveryOverview200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                getEgressFailedMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId,
                        _callback);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for getEgressSuccessMetricsFromDeliveryOverview
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. If you would like to view retry attempts for a successful
     *     delivery, you can filter &#x60;discardReason&#x60; from &#x60;successes.attempt.1&#x60;
     *     through &#x60;successes.attempt.10&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getEgressSuccessMetricsFromDeliveryOverviewCall(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/delivery-overview/successful-delivery";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceId", sourceId));
        }

        if (destinationConfigId != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("destinationConfigId", destinationConfigId));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endTime", endTime));
        }

        if (groupBy != null) {
            localVarCollectionQueryParams.addAll(
                    localVarApiClient.parameterToPairs("multi", "groupBy", groupBy));
        }

        if (granularity != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("granularity", granularity));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        if (subscriptionId != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("subscriptionId", subscriptionId));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1beta+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getEgressSuccessMetricsFromDeliveryOverviewValidateBeforeCall(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'sourceId' is set
        if (sourceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'sourceId' when calling"
                            + " getEgressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'destinationConfigId' is set
        if (destinationConfigId == null) {
            throw new ApiException(
                    "Missing the required parameter 'destinationConfigId' when calling"
                            + " getEgressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'startTime' when calling"
                            + " getEgressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'endTime' when calling"
                            + " getEgressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'granularity' is set
        if (granularity == null) {
            throw new ApiException(
                    "Missing the required parameter 'granularity' when calling"
                            + " getEgressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " getEgressSuccessMetricsFromDeliveryOverview(Async)");
        }

        return getEgressSuccessMetricsFromDeliveryOverviewCall(
                sourceId,
                destinationConfigId,
                startTime,
                endTime,
                groupBy,
                granularity,
                filter,
                pagination,
                subscriptionId,
                _callback);
    }

    /**
     * Get Egress Success Metrics from Delivery Overview Get events successfully delivered to
     * Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. If you would like to view retry attempts for a successful
     *     delivery, you can filter &#x60;discardReason&#x60; from &#x60;successes.attempt.1&#x60;
     *     through &#x60;successes.attempt.10&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @return GetEgressFailedMetricsFromDeliveryOverview200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetEgressFailedMetricsFromDeliveryOverview200Response
            getEgressSuccessMetricsFromDeliveryOverview(
                    String sourceId,
                    String destinationConfigId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination,
                    String subscriptionId)
                    throws ApiException {
        ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response> localVarResp =
                getEgressSuccessMetricsFromDeliveryOverviewWithHttpInfo(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId);
        return localVarResp.getData();
    }

    /**
     * Get Egress Success Metrics from Delivery Overview Get events successfully delivered to
     * Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. If you would like to view retry attempts for a successful
     *     delivery, you can filter &#x60;discardReason&#x60; from &#x60;successes.attempt.1&#x60;
     *     through &#x60;successes.attempt.10&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @return ApiResponse&lt;GetEgressFailedMetricsFromDeliveryOverview200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response>
            getEgressSuccessMetricsFromDeliveryOverviewWithHttpInfo(
                    String sourceId,
                    String destinationConfigId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination,
                    String subscriptionId)
                    throws ApiException {
        okhttp3.Call localVarCall =
                getEgressSuccessMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId,
                        null);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Egress Success Metrics from Delivery Overview (asynchronously) Get events successfully
     * delivered to Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. If you would like to view retry attempts for a successful
     *     delivery, you can filter &#x60;discardReason&#x60; from &#x60;successes.attempt.1&#x60;
     *     through &#x60;successes.attempt.10&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getEgressSuccessMetricsFromDeliveryOverviewAsync(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback<GetEgressFailedMetricsFromDeliveryOverview200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                getEgressSuccessMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId,
                        _callback);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for getFilteredAtDestinationMetricsFromDeliveryOverview
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getFilteredAtDestinationMetricsFromDeliveryOverviewCall(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/delivery-overview/filtered-at-destination";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceId", sourceId));
        }

        if (destinationConfigId != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("destinationConfigId", destinationConfigId));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endTime", endTime));
        }

        if (groupBy != null) {
            localVarCollectionQueryParams.addAll(
                    localVarApiClient.parameterToPairs("multi", "groupBy", groupBy));
        }

        if (granularity != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("granularity", granularity));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        if (subscriptionId != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("subscriptionId", subscriptionId));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1beta+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getFilteredAtDestinationMetricsFromDeliveryOverviewValidateBeforeCall(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'sourceId' is set
        if (sourceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'sourceId' when calling"
                            + " getFilteredAtDestinationMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'destinationConfigId' is set
        if (destinationConfigId == null) {
            throw new ApiException(
                    "Missing the required parameter 'destinationConfigId' when calling"
                            + " getFilteredAtDestinationMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'startTime' when calling"
                            + " getFilteredAtDestinationMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'endTime' when calling"
                            + " getFilteredAtDestinationMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'granularity' is set
        if (granularity == null) {
            throw new ApiException(
                    "Missing the required parameter 'granularity' when calling"
                            + " getFilteredAtDestinationMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " getFilteredAtDestinationMetricsFromDeliveryOverview(Async)");
        }

        return getFilteredAtDestinationMetricsFromDeliveryOverviewCall(
                sourceId,
                destinationConfigId,
                startTime,
                endTime,
                groupBy,
                granularity,
                filter,
                pagination,
                subscriptionId,
                _callback);
    }

    /**
     * Get Filtered At Destination Metrics from Delivery Overview Get events that were filtered at
     * Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @return GetEgressFailedMetricsFromDeliveryOverview200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetEgressFailedMetricsFromDeliveryOverview200Response
            getFilteredAtDestinationMetricsFromDeliveryOverview(
                    String sourceId,
                    String destinationConfigId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination,
                    String subscriptionId)
                    throws ApiException {
        ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response> localVarResp =
                getFilteredAtDestinationMetricsFromDeliveryOverviewWithHttpInfo(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId);
        return localVarResp.getData();
    }

    /**
     * Get Filtered At Destination Metrics from Delivery Overview Get events that were filtered at
     * Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @return ApiResponse&lt;GetEgressFailedMetricsFromDeliveryOverview200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response>
            getFilteredAtDestinationMetricsFromDeliveryOverviewWithHttpInfo(
                    String sourceId,
                    String destinationConfigId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination,
                    String subscriptionId)
                    throws ApiException {
        okhttp3.Call localVarCall =
                getFilteredAtDestinationMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId,
                        null);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Filtered At Destination Metrics from Delivery Overview (asynchronously) Get events that
     * were filtered at Destination.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param destinationConfigId The id tied to a Workspace Destination. This parameter exists in
     *     beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Params to specify the page cursor and count. This parameter exists in beta.
     *     (required)
     * @param subscriptionId An optional filter for actions destinations, to filter by a specific
     *     action. This parameter exists in beta. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getFilteredAtDestinationMetricsFromDeliveryOverviewAsync(
            String sourceId,
            String destinationConfigId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            String subscriptionId,
            final ApiCallback<GetEgressFailedMetricsFromDeliveryOverview200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                getFilteredAtDestinationMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        destinationConfigId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        subscriptionId,
                        _callback);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for getFilteredAtSourceMetricsFromDeliveryOverview
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getFilteredAtSourceMetricsFromDeliveryOverviewCall(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/delivery-overview/filtered-at-source";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceId", sourceId));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endTime", endTime));
        }

        if (groupBy != null) {
            localVarCollectionQueryParams.addAll(
                    localVarApiClient.parameterToPairs("multi", "groupBy", groupBy));
        }

        if (granularity != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("granularity", granularity));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1beta+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getFilteredAtSourceMetricsFromDeliveryOverviewValidateBeforeCall(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'sourceId' is set
        if (sourceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'sourceId' when calling"
                            + " getFilteredAtSourceMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'startTime' when calling"
                            + " getFilteredAtSourceMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'endTime' when calling"
                            + " getFilteredAtSourceMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'granularity' is set
        if (granularity == null) {
            throw new ApiException(
                    "Missing the required parameter 'granularity' when calling"
                            + " getFilteredAtSourceMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " getFilteredAtSourceMetricsFromDeliveryOverview(Async)");
        }

        return getFilteredAtSourceMetricsFromDeliveryOverviewCall(
                sourceId, startTime, endTime, groupBy, granularity, filter, pagination, _callback);
    }

    /**
     * Get Filtered At Source Metrics from Delivery Overview Get events that were filtered at
     * Source.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @return GetEgressFailedMetricsFromDeliveryOverview200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetEgressFailedMetricsFromDeliveryOverview200Response
            getFilteredAtSourceMetricsFromDeliveryOverview(
                    String sourceId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination)
                    throws ApiException {
        ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response> localVarResp =
                getFilteredAtSourceMetricsFromDeliveryOverviewWithHttpInfo(
                        sourceId, startTime, endTime, groupBy, granularity, filter, pagination);
        return localVarResp.getData();
    }

    /**
     * Get Filtered At Source Metrics from Delivery Overview Get events that were filtered at
     * Source.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @return ApiResponse&lt;GetEgressFailedMetricsFromDeliveryOverview200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response>
            getFilteredAtSourceMetricsFromDeliveryOverviewWithHttpInfo(
                    String sourceId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination)
                    throws ApiException {
        okhttp3.Call localVarCall =
                getFilteredAtSourceMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        null);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Filtered At Source Metrics from Delivery Overview (asynchronously) Get events that were
     * filtered at Source.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getFilteredAtSourceMetricsFromDeliveryOverviewAsync(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback<GetEgressFailedMetricsFromDeliveryOverview200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                getFilteredAtSourceMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        _callback);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for getIngressFailedMetricsFromDeliveryOverview
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getIngressFailedMetricsFromDeliveryOverviewCall(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/delivery-overview/failed-on-ingest";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceId", sourceId));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endTime", endTime));
        }

        if (groupBy != null) {
            localVarCollectionQueryParams.addAll(
                    localVarApiClient.parameterToPairs("multi", "groupBy", groupBy));
        }

        if (granularity != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("granularity", granularity));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1beta+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getIngressFailedMetricsFromDeliveryOverviewValidateBeforeCall(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'sourceId' is set
        if (sourceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'sourceId' when calling"
                            + " getIngressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'startTime' when calling"
                            + " getIngressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'endTime' when calling"
                            + " getIngressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'granularity' is set
        if (granularity == null) {
            throw new ApiException(
                    "Missing the required parameter 'granularity' when calling"
                            + " getIngressFailedMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " getIngressFailedMetricsFromDeliveryOverview(Async)");
        }

        return getIngressFailedMetricsFromDeliveryOverviewCall(
                sourceId, startTime, endTime, groupBy, granularity, filter, pagination, _callback);
    }

    /**
     * Get Ingress Failed Metrics from Delivery Overview Get events that failed on ingest.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @return GetEgressFailedMetricsFromDeliveryOverview200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetEgressFailedMetricsFromDeliveryOverview200Response
            getIngressFailedMetricsFromDeliveryOverview(
                    String sourceId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination)
                    throws ApiException {
        ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response> localVarResp =
                getIngressFailedMetricsFromDeliveryOverviewWithHttpInfo(
                        sourceId, startTime, endTime, groupBy, granularity, filter, pagination);
        return localVarResp.getData();
    }

    /**
     * Get Ingress Failed Metrics from Delivery Overview Get events that failed on ingest.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @return ApiResponse&lt;GetEgressFailedMetricsFromDeliveryOverview200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response>
            getIngressFailedMetricsFromDeliveryOverviewWithHttpInfo(
                    String sourceId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination)
                    throws ApiException {
        okhttp3.Call localVarCall =
                getIngressFailedMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        null);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Ingress Failed Metrics from Delivery Overview (asynchronously) Get events that failed on
     * ingest.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and &#x60;appVersion&#x60;. This parameter exists in beta.
     *     (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;,
     *     &#x60;discardReason&#x60;, and/or &#x60;appVersion&#x60; that can be applied in addition
     *     to a &#x60;groupBy&#x60;. This parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getIngressFailedMetricsFromDeliveryOverviewAsync(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback<GetEgressFailedMetricsFromDeliveryOverview200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                getIngressFailedMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        _callback);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for getIngressSuccessMetricsFromDeliveryOverview
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;, and
     *     &#x60;appVersion&#x60;. This parameter exists in beta. (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;, and/or
     *     &#x60;appVersion&#x60; that can be applied in addition to a &#x60;groupBy&#x60;. This
     *     parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getIngressSuccessMetricsFromDeliveryOverviewCall(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/delivery-overview/successfully-received";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (sourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sourceId", sourceId));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startTime", startTime));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endTime", endTime));
        }

        if (groupBy != null) {
            localVarCollectionQueryParams.addAll(
                    localVarApiClient.parameterToPairs("multi", "groupBy", groupBy));
        }

        if (granularity != null) {
            localVarQueryParams.addAll(
                    localVarApiClient.parameterToPair("granularity", granularity));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1beta+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getIngressSuccessMetricsFromDeliveryOverviewValidateBeforeCall(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'sourceId' is set
        if (sourceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'sourceId' when calling"
                            + " getIngressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'startTime' when calling"
                            + " getIngressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException(
                    "Missing the required parameter 'endTime' when calling"
                            + " getIngressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'granularity' is set
        if (granularity == null) {
            throw new ApiException(
                    "Missing the required parameter 'granularity' when calling"
                            + " getIngressSuccessMetricsFromDeliveryOverview(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " getIngressSuccessMetricsFromDeliveryOverview(Async)");
        }

        return getIngressSuccessMetricsFromDeliveryOverviewCall(
                sourceId, startTime, endTime, groupBy, granularity, filter, pagination, _callback);
    }

    /**
     * Get Ingress Success Metrics from Delivery Overview Get events that were successfully received
     * by Segment.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;, and
     *     &#x60;appVersion&#x60;. This parameter exists in beta. (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;, and/or
     *     &#x60;appVersion&#x60; that can be applied in addition to a &#x60;groupBy&#x60;. This
     *     parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @return GetEgressFailedMetricsFromDeliveryOverview200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetEgressFailedMetricsFromDeliveryOverview200Response
            getIngressSuccessMetricsFromDeliveryOverview(
                    String sourceId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination)
                    throws ApiException {
        ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response> localVarResp =
                getIngressSuccessMetricsFromDeliveryOverviewWithHttpInfo(
                        sourceId, startTime, endTime, groupBy, granularity, filter, pagination);
        return localVarResp.getData();
    }

    /**
     * Get Ingress Success Metrics from Delivery Overview Get events that were successfully received
     * by Segment.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;, and
     *     &#x60;appVersion&#x60;. This parameter exists in beta. (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;, and/or
     *     &#x60;appVersion&#x60; that can be applied in addition to a &#x60;groupBy&#x60;. This
     *     parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @return ApiResponse&lt;GetEgressFailedMetricsFromDeliveryOverview200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetEgressFailedMetricsFromDeliveryOverview200Response>
            getIngressSuccessMetricsFromDeliveryOverviewWithHttpInfo(
                    String sourceId,
                    String startTime,
                    String endTime,
                    List<String> groupBy,
                    String granularity,
                    DeliveryOverviewFilterBy filter,
                    PaginationInput pagination)
                    throws ApiException {
        okhttp3.Call localVarCall =
                getIngressSuccessMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        null);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Ingress Success Metrics from Delivery Overview (asynchronously) Get events that were
     * successfully received by Segment.
     *
     * @param sourceId The sourceId for the Workspace. This parameter exists in beta. (required)
     * @param startTime The ISO8601 formatted timestamp corresponding to the beginning of the
     *     requested timeframe, inclusive. This parameter exists in beta. (required)
     * @param endTime The ISO8601 formatted timestamp corresponding to the end of the requested
     *     timeframe, noninclusive. This parameter exists in beta. (required)
     * @param groupBy A comma-delimited list of strings representing one or more dimensions to group
     *     the result by. Valid options are: &#x60;eventName&#x60;, &#x60;eventType&#x60;, and
     *     &#x60;appVersion&#x60;. This parameter exists in beta. (optional)
     * @param granularity The size of each bucket in the requested window. Based on the granularity
     *     chosen, there are restrictions on the time range you can query: **Minute**: - Max time
     *     range: 4 hours - Oldest possible start time: 48 hours in the past **Hour**: - Max Time
     *     range: 14 days - Oldest possible start time: 30 days in the past **Day**: - Max time
     *     range: 30 days - Oldest possible start time: 30 days in the past This parameter exists in
     *     beta. (required)
     * @param filter An optional filter for &#x60;eventName&#x60;, &#x60;eventType&#x60;, and/or
     *     &#x60;appVersion&#x60; that can be applied in addition to a &#x60;groupBy&#x60;. This
     *     parameter exists in beta. (optional)
     * @param pagination Optional params to specify the page cursor and count. This parameter exists
     *     in beta. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getIngressSuccessMetricsFromDeliveryOverviewAsync(
            String sourceId,
            String startTime,
            String endTime,
            List<String> groupBy,
            String granularity,
            DeliveryOverviewFilterBy filter,
            PaginationInput pagination,
            final ApiCallback<GetEgressFailedMetricsFromDeliveryOverview200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                getIngressSuccessMetricsFromDeliveryOverviewValidateBeforeCall(
                        sourceId,
                        startTime,
                        endTime,
                        groupBy,
                        granularity,
                        filter,
                        pagination,
                        _callback);
        Type localVarReturnType =
                new TypeToken<GetEgressFailedMetricsFromDeliveryOverview200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
