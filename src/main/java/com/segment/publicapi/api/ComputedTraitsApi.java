/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.segment.publicapi.api;

import com.google.gson.reflect.TypeToken;
import com.segment.publicapi.ApiCallback;
import com.segment.publicapi.ApiClient;
import com.segment.publicapi.ApiException;
import com.segment.publicapi.ApiResponse;
import com.segment.publicapi.Configuration;
import com.segment.publicapi.Pair;
import com.segment.publicapi.models.CreateComputedTrait200Response;
import com.segment.publicapi.models.CreateComputedTraitAlphaInput;
import com.segment.publicapi.models.GetComputedTrait200Response;
import com.segment.publicapi.models.ListComputedTraits200Response;
import com.segment.publicapi.models.PaginationInput;
import com.segment.publicapi.models.RemoveComputedTraitFromSpace200Response;
import com.segment.publicapi.models.UpdateComputedTraitForSpace200Response;
import com.segment.publicapi.models.UpdateComputedTraitForSpaceAlphaInput;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ComputedTraitsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ComputedTraitsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ComputedTraitsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createComputedTrait
     *
     * @param spaceId (required)
     * @param createComputedTraitAlphaInput (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call createComputedTraitCall(
            String spaceId,
            CreateComputedTraitAlphaInput createComputedTraitAlphaInput,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createComputedTraitAlphaInput;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/computed-traits"
                        .replace(
                                "{" + "spaceId" + "}",
                                localVarApiClient.escapeString(spaceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {"application/vnd.segment.v1alpha+json"};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "POST",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createComputedTraitValidateBeforeCall(
            String spaceId,
            CreateComputedTraitAlphaInput createComputedTraitAlphaInput,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " createComputedTrait(Async)");
        }

        // verify the required parameter 'createComputedTraitAlphaInput' is set
        if (createComputedTraitAlphaInput == null) {
            throw new ApiException(
                    "Missing the required parameter 'createComputedTraitAlphaInput' when calling"
                            + " createComputedTrait(Async)");
        }

        return createComputedTraitCall(spaceId, createComputedTraitAlphaInput, _callback);
    }

    /**
     * Create Computed Trait Creates a Computed Trait • This endpoint is in **Alpha** testing.
     * Please submit any feedback by sending an email to friends@segment.com. • In order to
     * successfully call this endpoint, the specified Workspace needs to have the Computed Trait
     * feature enabled. Please reach out to your customer success manager for more information. •
     * When called, this endpoint may generate the &#x60;Computed Trait Created&#x60; event in the
     * [audit trail](/tag/Audit-Trail).Note: The definition for a Computed Trait created via the API
     * is not editable via the Segment App. The rate limit for this endpoint is 10 requests per
     * minute, which is lower than the default due to access pattern restrictions. Once reached,
     * this endpoint will respond with the 429 HTTP status code with headers indicating the limit
     * parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param createComputedTraitAlphaInput (required)
     * @return CreateComputedTrait200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public CreateComputedTrait200Response createComputedTrait(
            String spaceId, CreateComputedTraitAlphaInput createComputedTraitAlphaInput)
            throws ApiException {
        ApiResponse<CreateComputedTrait200Response> localVarResp =
                createComputedTraitWithHttpInfo(spaceId, createComputedTraitAlphaInput);
        return localVarResp.getData();
    }

    /**
     * Create Computed Trait Creates a Computed Trait • This endpoint is in **Alpha** testing.
     * Please submit any feedback by sending an email to friends@segment.com. • In order to
     * successfully call this endpoint, the specified Workspace needs to have the Computed Trait
     * feature enabled. Please reach out to your customer success manager for more information. •
     * When called, this endpoint may generate the &#x60;Computed Trait Created&#x60; event in the
     * [audit trail](/tag/Audit-Trail).Note: The definition for a Computed Trait created via the API
     * is not editable via the Segment App. The rate limit for this endpoint is 10 requests per
     * minute, which is lower than the default due to access pattern restrictions. Once reached,
     * this endpoint will respond with the 429 HTTP status code with headers indicating the limit
     * parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param createComputedTraitAlphaInput (required)
     * @return ApiResponse&lt;CreateComputedTrait200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<CreateComputedTrait200Response> createComputedTraitWithHttpInfo(
            String spaceId, CreateComputedTraitAlphaInput createComputedTraitAlphaInput)
            throws ApiException {
        okhttp3.Call localVarCall =
                createComputedTraitValidateBeforeCall(spaceId, createComputedTraitAlphaInput, null);
        Type localVarReturnType = new TypeToken<CreateComputedTrait200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Computed Trait (asynchronously) Creates a Computed Trait • This endpoint is in
     * **Alpha** testing. Please submit any feedback by sending an email to friends@segment.com. •
     * In order to successfully call this endpoint, the specified Workspace needs to have the
     * Computed Trait feature enabled. Please reach out to your customer success manager for more
     * information. • When called, this endpoint may generate the &#x60;Computed Trait Created&#x60;
     * event in the [audit trail](/tag/Audit-Trail).Note: The definition for a Computed Trait
     * created via the API is not editable via the Segment App. The rate limit for this endpoint is
     * 10 requests per minute, which is lower than the default due to access pattern restrictions.
     * Once reached, this endpoint will respond with the 429 HTTP status code with headers
     * indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param createComputedTraitAlphaInput (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call createComputedTraitAsync(
            String spaceId,
            CreateComputedTraitAlphaInput createComputedTraitAlphaInput,
            final ApiCallback<CreateComputedTrait200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                createComputedTraitValidateBeforeCall(
                        spaceId, createComputedTraitAlphaInput, _callback);
        Type localVarReturnType = new TypeToken<CreateComputedTrait200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for getComputedTrait
     *
     * @param spaceId (required)
     * @param id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getComputedTraitCall(String spaceId, String id, final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/computed-traits/{id}"
                        .replace(
                                "{" + "spaceId" + "}",
                                localVarApiClient.escapeString(spaceId.toString()))
                        .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getComputedTraitValidateBeforeCall(
            String spaceId, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " getComputedTrait(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException(
                    "Missing the required parameter 'id' when calling getComputedTrait(Async)");
        }

        return getComputedTraitCall(spaceId, id, _callback);
    }

    /**
     * Get Computed Trait Returns the Computed Trait by id and spaceId • This endpoint is in
     * **Alpha** testing. Please submit any feedback by sending an email to friends@segment.com. •
     * In order to successfully call this endpoint, the specified Workspace needs to have the
     * Computed Trait feature enabled. Please reach out to your customer success manager for more
     * information. The rate limit for this endpoint is 100 requests per minute, which is lower than
     * the default due to access pattern restrictions. Once reached, this endpoint will respond with
     * the 429 HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @return GetComputedTrait200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public GetComputedTrait200Response getComputedTrait(String spaceId, String id)
            throws ApiException {
        ApiResponse<GetComputedTrait200Response> localVarResp =
                getComputedTraitWithHttpInfo(spaceId, id);
        return localVarResp.getData();
    }

    /**
     * Get Computed Trait Returns the Computed Trait by id and spaceId • This endpoint is in
     * **Alpha** testing. Please submit any feedback by sending an email to friends@segment.com. •
     * In order to successfully call this endpoint, the specified Workspace needs to have the
     * Computed Trait feature enabled. Please reach out to your customer success manager for more
     * information. The rate limit for this endpoint is 100 requests per minute, which is lower than
     * the default due to access pattern restrictions. Once reached, this endpoint will respond with
     * the 429 HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @return ApiResponse&lt;GetComputedTrait200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<GetComputedTrait200Response> getComputedTraitWithHttpInfo(
            String spaceId, String id) throws ApiException {
        okhttp3.Call localVarCall = getComputedTraitValidateBeforeCall(spaceId, id, null);
        Type localVarReturnType = new TypeToken<GetComputedTrait200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Computed Trait (asynchronously) Returns the Computed Trait by id and spaceId • This
     * endpoint is in **Alpha** testing. Please submit any feedback by sending an email to
     * friends@segment.com. • In order to successfully call this endpoint, the specified Workspace
     * needs to have the Computed Trait feature enabled. Please reach out to your customer success
     * manager for more information. The rate limit for this endpoint is 100 requests per minute,
     * which is lower than the default due to access pattern restrictions. Once reached, this
     * endpoint will respond with the 429 HTTP status code with headers indicating the limit
     * parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call getComputedTraitAsync(
            String spaceId, String id, final ApiCallback<GetComputedTrait200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall = getComputedTraitValidateBeforeCall(spaceId, id, _callback);
        Type localVarReturnType = new TypeToken<GetComputedTrait200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for listComputedTraits
     *
     * @param spaceId (required)
     * @param pagination Information about the pagination of this response. [See
     *     pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters)
     *     for more info. This parameter exists in alpha. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call listComputedTraitsCall(
            String spaceId, PaginationInput pagination, final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/computed-traits"
                        .replace(
                                "{" + "spaceId" + "}",
                                localVarApiClient.escapeString(spaceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listComputedTraitsValidateBeforeCall(
            String spaceId, PaginationInput pagination, final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " listComputedTraits(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " listComputedTraits(Async)");
        }

        return listComputedTraitsCall(spaceId, pagination, _callback);
    }

    /**
     * List Computed Traits Returns Computed Traits by spaceId. • This endpoint is in **Alpha**
     * testing. Please submit any feedback by sending an email to friends@segment.com. • In order to
     * successfully call this endpoint, the specified Workspace needs to have the Computed Trait
     * feature enabled. Please reach out to your customer success manager for more information. The
     * rate limit for this endpoint is 25 requests per minute, which is lower than the default due
     * to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP
     * status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param pagination Information about the pagination of this response. [See
     *     pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters)
     *     for more info. This parameter exists in alpha. (required)
     * @return ListComputedTraits200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ListComputedTraits200Response listComputedTraits(
            String spaceId, PaginationInput pagination) throws ApiException {
        ApiResponse<ListComputedTraits200Response> localVarResp =
                listComputedTraitsWithHttpInfo(spaceId, pagination);
        return localVarResp.getData();
    }

    /**
     * List Computed Traits Returns Computed Traits by spaceId. • This endpoint is in **Alpha**
     * testing. Please submit any feedback by sending an email to friends@segment.com. • In order to
     * successfully call this endpoint, the specified Workspace needs to have the Computed Trait
     * feature enabled. Please reach out to your customer success manager for more information. The
     * rate limit for this endpoint is 25 requests per minute, which is lower than the default due
     * to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP
     * status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param pagination Information about the pagination of this response. [See
     *     pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters)
     *     for more info. This parameter exists in alpha. (required)
     * @return ApiResponse&lt;ListComputedTraits200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<ListComputedTraits200Response> listComputedTraitsWithHttpInfo(
            String spaceId, PaginationInput pagination) throws ApiException {
        okhttp3.Call localVarCall = listComputedTraitsValidateBeforeCall(spaceId, pagination, null);
        Type localVarReturnType = new TypeToken<ListComputedTraits200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Computed Traits (asynchronously) Returns Computed Traits by spaceId. • This endpoint is
     * in **Alpha** testing. Please submit any feedback by sending an email to friends@segment.com.
     * • In order to successfully call this endpoint, the specified Workspace needs to have the
     * Computed Trait feature enabled. Please reach out to your customer success manager for more
     * information. The rate limit for this endpoint is 25 requests per minute, which is lower than
     * the default due to access pattern restrictions. Once reached, this endpoint will respond with
     * the 429 HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param pagination Information about the pagination of this response. [See
     *     pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters)
     *     for more info. This parameter exists in alpha. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call listComputedTraitsAsync(
            String spaceId,
            PaginationInput pagination,
            final ApiCallback<ListComputedTraits200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                listComputedTraitsValidateBeforeCall(spaceId, pagination, _callback);
        Type localVarReturnType = new TypeToken<ListComputedTraits200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for removeComputedTraitFromSpace
     *
     * @param spaceId (required)
     * @param id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call removeComputedTraitFromSpaceCall(
            String spaceId, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/computed-traits/{id}"
                        .replace(
                                "{" + "spaceId" + "}",
                                localVarApiClient.escapeString(spaceId.toString()))
                        .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "DELETE",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeComputedTraitFromSpaceValidateBeforeCall(
            String spaceId, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " removeComputedTraitFromSpace(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException(
                    "Missing the required parameter 'id' when calling"
                            + " removeComputedTraitFromSpace(Async)");
        }

        return removeComputedTraitFromSpaceCall(spaceId, id, _callback);
    }

    /**
     * Remove Computed Trait from Space Deletes a Computed Trait by id and spaceId. • This endpoint
     * is in **Alpha** testing. Please submit any feedback by sending an email to
     * friends@segment.com. • In order to successfully call this endpoint, the specified Workspace
     * needs to have the Computed Trait feature enabled. Please reach out to your customer success
     * manager for more information. • When called, this endpoint may generate the &#x60;Computed
     * Trait Deleted&#x60; event in the [audit trail](/tag/Audit-Trail). The rate limit for this
     * endpoint is 20 requests per minute, which is lower than the default due to access pattern
     * restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with
     * headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more
     * information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @return RemoveComputedTraitFromSpace200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public RemoveComputedTraitFromSpace200Response removeComputedTraitFromSpace(
            String spaceId, String id) throws ApiException {
        ApiResponse<RemoveComputedTraitFromSpace200Response> localVarResp =
                removeComputedTraitFromSpaceWithHttpInfo(spaceId, id);
        return localVarResp.getData();
    }

    /**
     * Remove Computed Trait from Space Deletes a Computed Trait by id and spaceId. • This endpoint
     * is in **Alpha** testing. Please submit any feedback by sending an email to
     * friends@segment.com. • In order to successfully call this endpoint, the specified Workspace
     * needs to have the Computed Trait feature enabled. Please reach out to your customer success
     * manager for more information. • When called, this endpoint may generate the &#x60;Computed
     * Trait Deleted&#x60; event in the [audit trail](/tag/Audit-Trail). The rate limit for this
     * endpoint is 20 requests per minute, which is lower than the default due to access pattern
     * restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with
     * headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more
     * information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @return ApiResponse&lt;RemoveComputedTraitFromSpace200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<RemoveComputedTraitFromSpace200Response>
            removeComputedTraitFromSpaceWithHttpInfo(String spaceId, String id)
                    throws ApiException {
        okhttp3.Call localVarCall =
                removeComputedTraitFromSpaceValidateBeforeCall(spaceId, id, null);
        Type localVarReturnType =
                new TypeToken<RemoveComputedTraitFromSpace200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Remove Computed Trait from Space (asynchronously) Deletes a Computed Trait by id and spaceId.
     * • This endpoint is in **Alpha** testing. Please submit any feedback by sending an email to
     * friends@segment.com. • In order to successfully call this endpoint, the specified Workspace
     * needs to have the Computed Trait feature enabled. Please reach out to your customer success
     * manager for more information. • When called, this endpoint may generate the &#x60;Computed
     * Trait Deleted&#x60; event in the [audit trail](/tag/Audit-Trail). The rate limit for this
     * endpoint is 20 requests per minute, which is lower than the default due to access pattern
     * restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with
     * headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more
     * information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call removeComputedTraitFromSpaceAsync(
            String spaceId,
            String id,
            final ApiCallback<RemoveComputedTraitFromSpace200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                removeComputedTraitFromSpaceValidateBeforeCall(spaceId, id, _callback);
        Type localVarReturnType =
                new TypeToken<RemoveComputedTraitFromSpace200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for updateComputedTraitForSpace
     *
     * @param spaceId (required)
     * @param id (required)
     * @param updateComputedTraitForSpaceAlphaInput (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call updateComputedTraitForSpaceCall(
            String spaceId,
            String id,
            UpdateComputedTraitForSpaceAlphaInput updateComputedTraitForSpaceAlphaInput,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updateComputedTraitForSpaceAlphaInput;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/computed-traits/{id}"
                        .replace(
                                "{" + "spaceId" + "}",
                                localVarApiClient.escapeString(spaceId.toString()))
                        .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {"application/vnd.segment.v1alpha+json"};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "PATCH",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateComputedTraitForSpaceValidateBeforeCall(
            String spaceId,
            String id,
            UpdateComputedTraitForSpaceAlphaInput updateComputedTraitForSpaceAlphaInput,
            final ApiCallback _callback)
            throws ApiException {
        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " updateComputedTraitForSpace(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException(
                    "Missing the required parameter 'id' when calling"
                            + " updateComputedTraitForSpace(Async)");
        }

        // verify the required parameter 'updateComputedTraitForSpaceAlphaInput' is set
        if (updateComputedTraitForSpaceAlphaInput == null) {
            throw new ApiException(
                    "Missing the required parameter 'updateComputedTraitForSpaceAlphaInput' when"
                            + " calling updateComputedTraitForSpace(Async)");
        }

        return updateComputedTraitForSpaceCall(
                spaceId, id, updateComputedTraitForSpaceAlphaInput, _callback);
    }

    /**
     * Update Computed Trait for Space Updates the enabled status for a computed trait. • This
     * endpoint is in **Alpha** testing. Please submit any feedback by sending an email to
     * friends@segment.com. • In order to successfully call this endpoint, the specified Workspace
     * needs to have the Computed Trait feature enabled. Please reach out to your customer success
     * manager for more information. • When called, this endpoint may generate the &#x60;Computed
     * Trait Modified&#x60; event in the [audit trail](/tag/Audit-Trail). • Note that when a
     * Computed Trait is updated, the Computed Trait will be locked from future edits until the
     * changes have been incorporated. You can find more information [in the Segment
     * docs](https://segment-docs.netlify.app/docs/unify/traits/computed-traits/#editing-realtime-traits).Note:
     * The definition for a Computed Trait updated via the API is not editable via the Segment App.
     * The rate limit for this endpoint is 10 requests per minute, which is lower than the default
     * due to access pattern restrictions. Once reached, this endpoint will respond with the 429
     * HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @param updateComputedTraitForSpaceAlphaInput (required)
     * @return UpdateComputedTraitForSpace200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public UpdateComputedTraitForSpace200Response updateComputedTraitForSpace(
            String spaceId,
            String id,
            UpdateComputedTraitForSpaceAlphaInput updateComputedTraitForSpaceAlphaInput)
            throws ApiException {
        ApiResponse<UpdateComputedTraitForSpace200Response> localVarResp =
                updateComputedTraitForSpaceWithHttpInfo(
                        spaceId, id, updateComputedTraitForSpaceAlphaInput);
        return localVarResp.getData();
    }

    /**
     * Update Computed Trait for Space Updates the enabled status for a computed trait. • This
     * endpoint is in **Alpha** testing. Please submit any feedback by sending an email to
     * friends@segment.com. • In order to successfully call this endpoint, the specified Workspace
     * needs to have the Computed Trait feature enabled. Please reach out to your customer success
     * manager for more information. • When called, this endpoint may generate the &#x60;Computed
     * Trait Modified&#x60; event in the [audit trail](/tag/Audit-Trail). • Note that when a
     * Computed Trait is updated, the Computed Trait will be locked from future edits until the
     * changes have been incorporated. You can find more information [in the Segment
     * docs](https://segment-docs.netlify.app/docs/unify/traits/computed-traits/#editing-realtime-traits).Note:
     * The definition for a Computed Trait updated via the API is not editable via the Segment App.
     * The rate limit for this endpoint is 10 requests per minute, which is lower than the default
     * due to access pattern restrictions. Once reached, this endpoint will respond with the 429
     * HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @param updateComputedTraitForSpaceAlphaInput (required)
     * @return ApiResponse&lt;UpdateComputedTraitForSpace200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<UpdateComputedTraitForSpace200Response>
            updateComputedTraitForSpaceWithHttpInfo(
                    String spaceId,
                    String id,
                    UpdateComputedTraitForSpaceAlphaInput updateComputedTraitForSpaceAlphaInput)
                    throws ApiException {
        okhttp3.Call localVarCall =
                updateComputedTraitForSpaceValidateBeforeCall(
                        spaceId, id, updateComputedTraitForSpaceAlphaInput, null);
        Type localVarReturnType =
                new TypeToken<UpdateComputedTraitForSpace200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Computed Trait for Space (asynchronously) Updates the enabled status for a computed
     * trait. • This endpoint is in **Alpha** testing. Please submit any feedback by sending an
     * email to friends@segment.com. • In order to successfully call this endpoint, the specified
     * Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer
     * success manager for more information. • When called, this endpoint may generate the
     * &#x60;Computed Trait Modified&#x60; event in the [audit trail](/tag/Audit-Trail). • Note that
     * when a Computed Trait is updated, the Computed Trait will be locked from future edits until
     * the changes have been incorporated. You can find more information [in the Segment
     * docs](https://segment-docs.netlify.app/docs/unify/traits/computed-traits/#editing-realtime-traits).Note:
     * The definition for a Computed Trait updated via the API is not editable via the Segment App.
     * The rate limit for this endpoint is 10 requests per minute, which is lower than the default
     * due to access pattern restrictions. Once reached, this endpoint will respond with the 429
     * HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param id (required)
     * @param updateComputedTraitForSpaceAlphaInput (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call updateComputedTraitForSpaceAsync(
            String spaceId,
            String id,
            UpdateComputedTraitForSpaceAlphaInput updateComputedTraitForSpaceAlphaInput,
            final ApiCallback<UpdateComputedTraitForSpace200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                updateComputedTraitForSpaceValidateBeforeCall(
                        spaceId, id, updateComputedTraitForSpaceAlphaInput, _callback);
        Type localVarReturnType =
                new TypeToken<UpdateComputedTraitForSpace200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
