/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.segment.publicapi.api;


import com.google.gson.reflect.TypeToken;
import com.segment.publicapi.ApiCallback;
import com.segment.publicapi.ApiClient;
import com.segment.publicapi.ApiException;
import com.segment.publicapi.ApiResponse;
import com.segment.publicapi.Configuration;
import com.segment.publicapi.Pair;
import com.segment.publicapi.models.CreateProfilesWarehouse200Response;
import com.segment.publicapi.models.CreateProfilesWarehouseAlphaInput;
import com.segment.publicapi.models.ListProfilesWarehouseInSpace200Response;
import com.segment.publicapi.models.ListSelectiveSyncsFromWarehouseAndSpace200Response;
import com.segment.publicapi.models.PaginationInput;
import com.segment.publicapi.models.RemoveProfilesWarehouseFromSpace200Response;
import com.segment.publicapi.models.UpdateProfilesWarehouseForSpaceWarehouse200Response;
import com.segment.publicapi.models.UpdateProfilesWarehouseForSpaceWarehouseAlphaInput;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProfilesSyncApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProfilesSyncApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProfilesSyncApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createProfilesWarehouse
     *
     * @param spaceId (required)
     * @param createProfilesWarehouseAlphaInput (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call createProfilesWarehouseCall(
            String spaceId,
            CreateProfilesWarehouseAlphaInput createProfilesWarehouseAlphaInput,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createProfilesWarehouseAlphaInput;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/profiles-warehouses"
                        .replaceAll(
                                "\\{" + "spaceId" + "\\}",
                                localVarApiClient.escapeString(spaceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {"application/vnd.segment.v1alpha+json"};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "POST",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createProfilesWarehouseValidateBeforeCall(
            String spaceId,
            CreateProfilesWarehouseAlphaInput createProfilesWarehouseAlphaInput,
            final ApiCallback _callback)
            throws ApiException {

        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " createProfilesWarehouse(Async)");
        }

        // verify the required parameter 'createProfilesWarehouseAlphaInput' is set
        if (createProfilesWarehouseAlphaInput == null) {
            throw new ApiException(
                    "Missing the required parameter 'createProfilesWarehouseAlphaInput' when"
                            + " calling createProfilesWarehouse(Async)");
        }

        okhttp3.Call localVarCall =
                createProfilesWarehouseCall(spaceId, createProfilesWarehouseAlphaInput, _callback);
        return localVarCall;
    }

    /**
     * Create Profiles Warehouse Creates a new Profiles Warehouse. • When called, this endpoint may
     * generate the &#x60;Profiles Sync Warehouse Created&#x60; event in the [audit
     * trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param createProfilesWarehouseAlphaInput (required)
     * @return CreateProfilesWarehouse200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public CreateProfilesWarehouse200Response createProfilesWarehouse(
            String spaceId, CreateProfilesWarehouseAlphaInput createProfilesWarehouseAlphaInput)
            throws ApiException {
        ApiResponse<CreateProfilesWarehouse200Response> localVarResp =
                createProfilesWarehouseWithHttpInfo(spaceId, createProfilesWarehouseAlphaInput);
        return localVarResp.getData();
    }

    /**
     * Create Profiles Warehouse Creates a new Profiles Warehouse. • When called, this endpoint may
     * generate the &#x60;Profiles Sync Warehouse Created&#x60; event in the [audit
     * trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param createProfilesWarehouseAlphaInput (required)
     * @return ApiResponse&lt;CreateProfilesWarehouse200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<CreateProfilesWarehouse200Response> createProfilesWarehouseWithHttpInfo(
            String spaceId, CreateProfilesWarehouseAlphaInput createProfilesWarehouseAlphaInput)
            throws ApiException {
        okhttp3.Call localVarCall =
                createProfilesWarehouseValidateBeforeCall(
                        spaceId, createProfilesWarehouseAlphaInput, null);
        Type localVarReturnType = new TypeToken<CreateProfilesWarehouse200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Profiles Warehouse (asynchronously) Creates a new Profiles Warehouse. • When called,
     * this endpoint may generate the &#x60;Profiles Sync Warehouse Created&#x60; event in the
     * [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param createProfilesWarehouseAlphaInput (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call createProfilesWarehouseAsync(
            String spaceId,
            CreateProfilesWarehouseAlphaInput createProfilesWarehouseAlphaInput,
            final ApiCallback<CreateProfilesWarehouse200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                createProfilesWarehouseValidateBeforeCall(
                        spaceId, createProfilesWarehouseAlphaInput, _callback);
        Type localVarReturnType = new TypeToken<CreateProfilesWarehouse200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listProfilesWarehouseInSpace
     *
     * @param spaceId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call listProfilesWarehouseInSpaceCall(
            String spaceId, PaginationInput pagination, final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/profiles-warehouses"
                        .replaceAll(
                                "\\{" + "spaceId" + "\\}",
                                localVarApiClient.escapeString(spaceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};

        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listProfilesWarehouseInSpaceValidateBeforeCall(
            String spaceId, PaginationInput pagination, final ApiCallback _callback)
            throws ApiException {

        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " listProfilesWarehouseInSpace(Async)");
        }

        okhttp3.Call localVarCall =
                listProfilesWarehouseInSpaceCall(spaceId, pagination, _callback);
        return localVarCall;
    }

    /**
     * List Profiles Warehouse in Space Lists all Profile Warehouses for a given space id. • When
     * called, this endpoint may generate the &#x60;Profiles Sync Warehouse Retrieved&#x60; event in
     * the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (optional)
     * @return ListProfilesWarehouseInSpace200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ListProfilesWarehouseInSpace200Response listProfilesWarehouseInSpace(
            String spaceId, PaginationInput pagination) throws ApiException {
        ApiResponse<ListProfilesWarehouseInSpace200Response> localVarResp =
                listProfilesWarehouseInSpaceWithHttpInfo(spaceId, pagination);
        return localVarResp.getData();
    }

    /**
     * List Profiles Warehouse in Space Lists all Profile Warehouses for a given space id. • When
     * called, this endpoint may generate the &#x60;Profiles Sync Warehouse Retrieved&#x60; event in
     * the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (optional)
     * @return ApiResponse&lt;ListProfilesWarehouseInSpace200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<ListProfilesWarehouseInSpace200Response>
            listProfilesWarehouseInSpaceWithHttpInfo(String spaceId, PaginationInput pagination)
                    throws ApiException {
        okhttp3.Call localVarCall =
                listProfilesWarehouseInSpaceValidateBeforeCall(spaceId, pagination, null);
        Type localVarReturnType =
                new TypeToken<ListProfilesWarehouseInSpace200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Profiles Warehouse in Space (asynchronously) Lists all Profile Warehouses for a given
     * space id. • When called, this endpoint may generate the &#x60;Profiles Sync Warehouse
     * Retrieved&#x60; event in the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call listProfilesWarehouseInSpaceAsync(
            String spaceId,
            PaginationInput pagination,
            final ApiCallback<ListProfilesWarehouseInSpace200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                listProfilesWarehouseInSpaceValidateBeforeCall(spaceId, pagination, _callback);
        Type localVarReturnType =
                new TypeToken<ListProfilesWarehouseInSpace200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listSelectiveSyncsFromWarehouseAndSpace
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call listSelectiveSyncsFromWarehouseAndSpaceCall(
            String spaceId,
            String warehouseId,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs"
                        .replaceAll(
                                "\\{" + "spaceId" + "\\}",
                                localVarApiClient.escapeString(spaceId.toString()))
                        .replaceAll(
                                "\\{" + "warehouseId" + "\\}",
                                localVarApiClient.escapeString(warehouseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pagination != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagination", pagination));
        }

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};

        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "GET",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listSelectiveSyncsFromWarehouseAndSpaceValidateBeforeCall(
            String spaceId,
            String warehouseId,
            PaginationInput pagination,
            final ApiCallback _callback)
            throws ApiException {

        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " listSelectiveSyncsFromWarehouseAndSpace(Async)");
        }

        // verify the required parameter 'warehouseId' is set
        if (warehouseId == null) {
            throw new ApiException(
                    "Missing the required parameter 'warehouseId' when calling"
                            + " listSelectiveSyncsFromWarehouseAndSpace(Async)");
        }

        // verify the required parameter 'pagination' is set
        if (pagination == null) {
            throw new ApiException(
                    "Missing the required parameter 'pagination' when calling"
                            + " listSelectiveSyncsFromWarehouseAndSpace(Async)");
        }

        okhttp3.Call localVarCall =
                listSelectiveSyncsFromWarehouseAndSpaceCall(
                        spaceId, warehouseId, pagination, _callback);
        return localVarCall;
    }

    /**
     * List Selective Syncs from Warehouse And Space Returns the schema for a Space Warehouse
     * connection, including Sources, Collections, and Properties. • When called, this endpoint may
     * generate the &#x60;Profiles Sync Warehouse Schema Retrieved&#x60; event in the [audit
     * trail](/tag/Audit-Trail). The rate limit for this endpoint is 2 requests per minute, which is
     * lower than the default due to access pattern restrictions. Once reached, this endpoint will
     * respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (required)
     * @return ListSelectiveSyncsFromWarehouseAndSpace200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ListSelectiveSyncsFromWarehouseAndSpace200Response
            listSelectiveSyncsFromWarehouseAndSpace(
                    String spaceId, String warehouseId, PaginationInput pagination)
                    throws ApiException {
        ApiResponse<ListSelectiveSyncsFromWarehouseAndSpace200Response> localVarResp =
                listSelectiveSyncsFromWarehouseAndSpaceWithHttpInfo(
                        spaceId, warehouseId, pagination);
        return localVarResp.getData();
    }

    /**
     * List Selective Syncs from Warehouse And Space Returns the schema for a Space Warehouse
     * connection, including Sources, Collections, and Properties. • When called, this endpoint may
     * generate the &#x60;Profiles Sync Warehouse Schema Retrieved&#x60; event in the [audit
     * trail](/tag/Audit-Trail). The rate limit for this endpoint is 2 requests per minute, which is
     * lower than the default due to access pattern restrictions. Once reached, this endpoint will
     * respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate
     * Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (required)
     * @return ApiResponse&lt;ListSelectiveSyncsFromWarehouseAndSpace200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<ListSelectiveSyncsFromWarehouseAndSpace200Response>
            listSelectiveSyncsFromWarehouseAndSpaceWithHttpInfo(
                    String spaceId, String warehouseId, PaginationInput pagination)
                    throws ApiException {
        okhttp3.Call localVarCall =
                listSelectiveSyncsFromWarehouseAndSpaceValidateBeforeCall(
                        spaceId, warehouseId, pagination, null);
        Type localVarReturnType =
                new TypeToken<ListSelectiveSyncsFromWarehouseAndSpace200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Selective Syncs from Warehouse And Space (asynchronously) Returns the schema for a Space
     * Warehouse connection, including Sources, Collections, and Properties. • When called, this
     * endpoint may generate the &#x60;Profiles Sync Warehouse Schema Retrieved&#x60; event in the
     * [audit trail](/tag/Audit-Trail). The rate limit for this endpoint is 2 requests per minute,
     * which is lower than the default due to access pattern restrictions. Once reached, this
     * endpoint will respond with the 429 HTTP status code with headers indicating the limit
     * parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param pagination Defines the pagination parameters. This parameter exists in alpha.
     *     (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call listSelectiveSyncsFromWarehouseAndSpaceAsync(
            String spaceId,
            String warehouseId,
            PaginationInput pagination,
            final ApiCallback<ListSelectiveSyncsFromWarehouseAndSpace200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                listSelectiveSyncsFromWarehouseAndSpaceValidateBeforeCall(
                        spaceId, warehouseId, pagination, _callback);
        Type localVarReturnType =
                new TypeToken<ListSelectiveSyncsFromWarehouseAndSpace200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeProfilesWarehouseFromSpace
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call removeProfilesWarehouseFromSpaceCall(
            String spaceId, String warehouseId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/profiles-warehouses/{warehouseId}"
                        .replaceAll(
                                "\\{" + "spaceId" + "\\}",
                                localVarApiClient.escapeString(spaceId.toString()))
                        .replaceAll(
                                "\\{" + "warehouseId" + "\\}",
                                localVarApiClient.escapeString(warehouseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {};

        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "DELETE",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeProfilesWarehouseFromSpaceValidateBeforeCall(
            String spaceId, String warehouseId, final ApiCallback _callback) throws ApiException {

        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " removeProfilesWarehouseFromSpace(Async)");
        }

        // verify the required parameter 'warehouseId' is set
        if (warehouseId == null) {
            throw new ApiException(
                    "Missing the required parameter 'warehouseId' when calling"
                            + " removeProfilesWarehouseFromSpace(Async)");
        }

        okhttp3.Call localVarCall =
                removeProfilesWarehouseFromSpaceCall(spaceId, warehouseId, _callback);
        return localVarCall;
    }

    /**
     * Remove Profiles Warehouse from Space Deletes an existing Profiles Warehouse. • When called,
     * this endpoint may generate the &#x60;Profiles Sync Warehouse Deleted&#x60; event in the
     * [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @return RemoveProfilesWarehouseFromSpace200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public RemoveProfilesWarehouseFromSpace200Response removeProfilesWarehouseFromSpace(
            String spaceId, String warehouseId) throws ApiException {
        ApiResponse<RemoveProfilesWarehouseFromSpace200Response> localVarResp =
                removeProfilesWarehouseFromSpaceWithHttpInfo(spaceId, warehouseId);
        return localVarResp.getData();
    }

    /**
     * Remove Profiles Warehouse from Space Deletes an existing Profiles Warehouse. • When called,
     * this endpoint may generate the &#x60;Profiles Sync Warehouse Deleted&#x60; event in the
     * [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @return ApiResponse&lt;RemoveProfilesWarehouseFromSpace200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<RemoveProfilesWarehouseFromSpace200Response>
            removeProfilesWarehouseFromSpaceWithHttpInfo(String spaceId, String warehouseId)
                    throws ApiException {
        okhttp3.Call localVarCall =
                removeProfilesWarehouseFromSpaceValidateBeforeCall(spaceId, warehouseId, null);
        Type localVarReturnType =
                new TypeToken<RemoveProfilesWarehouseFromSpace200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Remove Profiles Warehouse from Space (asynchronously) Deletes an existing Profiles Warehouse.
     * • When called, this endpoint may generate the &#x60;Profiles Sync Warehouse Deleted&#x60;
     * event in the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call removeProfilesWarehouseFromSpaceAsync(
            String spaceId,
            String warehouseId,
            final ApiCallback<RemoveProfilesWarehouseFromSpace200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                removeProfilesWarehouseFromSpaceValidateBeforeCall(spaceId, warehouseId, _callback);
        Type localVarReturnType =
                new TypeToken<RemoveProfilesWarehouseFromSpace200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateProfilesWarehouseForSpaceWarehouse
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param updateProfilesWarehouseForSpaceWarehouseAlphaInput (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call updateProfilesWarehouseForSpaceWarehouseCall(
            String spaceId,
            String warehouseId,
            UpdateProfilesWarehouseForSpaceWarehouseAlphaInput
                    updateProfilesWarehouseForSpaceWarehouseAlphaInput,
            final ApiCallback _callback)
            throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {};

        // Determine Base Path to Use
        if (localCustomBaseUrl != null) {
            basePath = localCustomBaseUrl;
        } else if (localBasePaths.length > 0) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updateProfilesWarehouseForSpaceWarehouseAlphaInput;

        // create path and map variables
        String localVarPath =
                "/spaces/{spaceId}/profiles-warehouses/{warehouseId}"
                        .replaceAll(
                                "\\{" + "spaceId" + "\\}",
                                localVarApiClient.escapeString(spaceId.toString()))
                        .replaceAll(
                                "\\{" + "warehouseId" + "\\}",
                                localVarApiClient.escapeString(warehouseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/vnd.segment.v1alpha+json", "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {"application/vnd.segment.v1alpha+json"};
        final String localVarContentType =
                localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {"token"};
        return localVarApiClient.buildCall(
                basePath,
                localVarPath,
                "PATCH",
                localVarQueryParams,
                localVarCollectionQueryParams,
                localVarPostBody,
                localVarHeaderParams,
                localVarCookieParams,
                localVarFormParams,
                localVarAuthNames,
                _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateProfilesWarehouseForSpaceWarehouseValidateBeforeCall(
            String spaceId,
            String warehouseId,
            UpdateProfilesWarehouseForSpaceWarehouseAlphaInput
                    updateProfilesWarehouseForSpaceWarehouseAlphaInput,
            final ApiCallback _callback)
            throws ApiException {

        // verify the required parameter 'spaceId' is set
        if (spaceId == null) {
            throw new ApiException(
                    "Missing the required parameter 'spaceId' when calling"
                            + " updateProfilesWarehouseForSpaceWarehouse(Async)");
        }

        // verify the required parameter 'warehouseId' is set
        if (warehouseId == null) {
            throw new ApiException(
                    "Missing the required parameter 'warehouseId' when calling"
                            + " updateProfilesWarehouseForSpaceWarehouse(Async)");
        }

        // verify the required parameter 'updateProfilesWarehouseForSpaceWarehouseAlphaInput' is set
        if (updateProfilesWarehouseForSpaceWarehouseAlphaInput == null) {
            throw new ApiException(
                    "Missing the required parameter"
                            + " 'updateProfilesWarehouseForSpaceWarehouseAlphaInput' when calling"
                            + " updateProfilesWarehouseForSpaceWarehouse(Async)");
        }

        okhttp3.Call localVarCall =
                updateProfilesWarehouseForSpaceWarehouseCall(
                        spaceId,
                        warehouseId,
                        updateProfilesWarehouseForSpaceWarehouseAlphaInput,
                        _callback);
        return localVarCall;
    }

    /**
     * Update Profiles Warehouse for Space Warehouse Updates an existing Profiles Warehouse. • When
     * called, this endpoint may generate the &#x60;Profiles Sync Warehouse Updated&#x60; event in
     * the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param updateProfilesWarehouseForSpaceWarehouseAlphaInput (required)
     * @return UpdateProfilesWarehouseForSpaceWarehouse200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public UpdateProfilesWarehouseForSpaceWarehouse200Response
            updateProfilesWarehouseForSpaceWarehouse(
                    String spaceId,
                    String warehouseId,
                    UpdateProfilesWarehouseForSpaceWarehouseAlphaInput
                            updateProfilesWarehouseForSpaceWarehouseAlphaInput)
                    throws ApiException {
        ApiResponse<UpdateProfilesWarehouseForSpaceWarehouse200Response> localVarResp =
                updateProfilesWarehouseForSpaceWarehouseWithHttpInfo(
                        spaceId, warehouseId, updateProfilesWarehouseForSpaceWarehouseAlphaInput);
        return localVarResp.getData();
    }

    /**
     * Update Profiles Warehouse for Space Warehouse Updates an existing Profiles Warehouse. • When
     * called, this endpoint may generate the &#x60;Profiles Sync Warehouse Updated&#x60; event in
     * the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param updateProfilesWarehouseForSpaceWarehouseAlphaInput (required)
     * @return ApiResponse&lt;UpdateProfilesWarehouseForSpaceWarehouse200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the
     *     response body
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public ApiResponse<UpdateProfilesWarehouseForSpaceWarehouse200Response>
            updateProfilesWarehouseForSpaceWarehouseWithHttpInfo(
                    String spaceId,
                    String warehouseId,
                    UpdateProfilesWarehouseForSpaceWarehouseAlphaInput
                            updateProfilesWarehouseForSpaceWarehouseAlphaInput)
                    throws ApiException {
        okhttp3.Call localVarCall =
                updateProfilesWarehouseForSpaceWarehouseValidateBeforeCall(
                        spaceId,
                        warehouseId,
                        updateProfilesWarehouseForSpaceWarehouseAlphaInput,
                        null);
        Type localVarReturnType =
                new TypeToken<UpdateProfilesWarehouseForSpaceWarehouse200Response>() {}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Profiles Warehouse for Space Warehouse (asynchronously) Updates an existing Profiles
     * Warehouse. • When called, this endpoint may generate the &#x60;Profiles Sync Warehouse
     * Updated&#x60; event in the [audit trail](/tag/Audit-Trail).
     *
     * @param spaceId (required)
     * @param warehouseId (required)
     * @param updateProfilesWarehouseForSpaceWarehouseAlphaInput (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body
     *     object
     * @http.response.details
     *     <table summary="Response Details" border="1">
     * <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
     * <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     * <tr><td> 404 </td><td> Resource not found </td><td>  -  </td></tr>
     * <tr><td> 422 </td><td> Validation failure </td><td>  -  </td></tr>
     * <tr><td> 429 </td><td> Too many requests </td><td>  -  </td></tr>
     * </table>
     */
    public okhttp3.Call updateProfilesWarehouseForSpaceWarehouseAsync(
            String spaceId,
            String warehouseId,
            UpdateProfilesWarehouseForSpaceWarehouseAlphaInput
                    updateProfilesWarehouseForSpaceWarehouseAlphaInput,
            final ApiCallback<UpdateProfilesWarehouseForSpaceWarehouse200Response> _callback)
            throws ApiException {

        okhttp3.Call localVarCall =
                updateProfilesWarehouseForSpaceWarehouseValidateBeforeCall(
                        spaceId,
                        warehouseId,
                        updateProfilesWarehouseForSpaceWarehouseAlphaInput,
                        _callback);
        Type localVarReturnType =
                new TypeToken<UpdateProfilesWarehouseForSpaceWarehouse200Response>() {}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
