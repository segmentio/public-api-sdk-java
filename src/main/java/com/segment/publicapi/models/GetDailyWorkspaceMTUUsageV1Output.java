/*
 * Segment Public API
 * The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.  All CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.  See the next sections for more information on how to use the Segment Public API.
 *
 * The version of the OpenAPI document: 32.0.8
 * Contact: friends@segment.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.segment.publicapi.models;


import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.segment.publicapi.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Set;

/** Returns a list of daily aggregations of Workspace MTU counts. */
@ApiModel(description = "Returns a list of daily aggregations of Workspace MTU counts.")
public class GetDailyWorkspaceMTUUsageV1Output {
    public static final String SERIALIZED_NAME_DAILY_WORKSPACE_M_T_U_USAGE =
            "dailyWorkspaceMTUUsage";

    @SerializedName(SERIALIZED_NAME_DAILY_WORKSPACE_M_T_U_USAGE)
    private List<MtuSnapshotV1> dailyWorkspaceMTUUsage = new ArrayList<>();

    public static final String SERIALIZED_NAME_PAGINATION = "pagination";

    @SerializedName(SERIALIZED_NAME_PAGINATION)
    private Pagination pagination;

    public GetDailyWorkspaceMTUUsageV1Output() {}

    public GetDailyWorkspaceMTUUsageV1Output dailyWorkspaceMTUUsage(
            List<MtuSnapshotV1> dailyWorkspaceMTUUsage) {

        this.dailyWorkspaceMTUUsage = dailyWorkspaceMTUUsage;
        return this;
    }

    public GetDailyWorkspaceMTUUsageV1Output addDailyWorkspaceMTUUsageItem(
            MtuSnapshotV1 dailyWorkspaceMTUUsageItem) {
        this.dailyWorkspaceMTUUsage.add(dailyWorkspaceMTUUsageItem);
        return this;
    }

    /**
     * The list of daily Workspace MTU count aggregates.
     *
     * @return dailyWorkspaceMTUUsage
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "The list of daily Workspace MTU count aggregates.")
    public List<MtuSnapshotV1> getDailyWorkspaceMTUUsage() {
        return dailyWorkspaceMTUUsage;
    }

    public void setDailyWorkspaceMTUUsage(List<MtuSnapshotV1> dailyWorkspaceMTUUsage) {
        this.dailyWorkspaceMTUUsage = dailyWorkspaceMTUUsage;
    }

    public GetDailyWorkspaceMTUUsageV1Output pagination(Pagination pagination) {

        this.pagination = pagination;
        return this;
    }

    /**
     * Get pagination
     *
     * @return pagination
     */
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    public Pagination getPagination() {
        return pagination;
    }

    public void setPagination(Pagination pagination) {
        this.pagination = pagination;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetDailyWorkspaceMTUUsageV1Output getDailyWorkspaceMTUUsageV1Output =
                (GetDailyWorkspaceMTUUsageV1Output) o;
        return Objects.equals(
                        this.dailyWorkspaceMTUUsage,
                        getDailyWorkspaceMTUUsageV1Output.dailyWorkspaceMTUUsage)
                && Objects.equals(this.pagination, getDailyWorkspaceMTUUsageV1Output.pagination);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dailyWorkspaceMTUUsage, pagination);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetDailyWorkspaceMTUUsageV1Output {\n");
        sb.append("    dailyWorkspaceMTUUsage: ")
                .append(toIndentedString(dailyWorkspaceMTUUsage))
                .append("\n");
        sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("dailyWorkspaceMTUUsage");
        openapiFields.add("pagination");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
        openapiRequiredFields.add("dailyWorkspaceMTUUsage");
        openapiRequiredFields.add("pagination");
    }

    /**
     * Validates the JSON Object and throws an exception if issues found
     *
     * @param jsonObj JSON Object
     * @throws IOException if the JSON Object is invalid with respect to
     *     GetDailyWorkspaceMTUUsageV1Output
     */
    public static void validateJsonObject(JsonObject jsonObj) throws IOException {
        if (jsonObj == null) {
            if (!GetDailyWorkspaceMTUUsageV1Output.openapiRequiredFields
                    .isEmpty()) { // has required fields but JSON object is null
                throw new IllegalArgumentException(
                        String.format(
                                "The required field(s) %s in GetDailyWorkspaceMTUUsageV1Output is"
                                        + " not found in the empty JSON string",
                                GetDailyWorkspaceMTUUsageV1Output.openapiRequiredFields
                                        .toString()));
            }
        }

        Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
        // check to see if the JSON string contains additional fields
        for (Entry<String, JsonElement> entry : entries) {
            if (!GetDailyWorkspaceMTUUsageV1Output.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(
                        String.format(
                                "The field `%s` in the JSON string is not defined in the"
                                    + " `GetDailyWorkspaceMTUUsageV1Output` properties. JSON: %s",
                                entry.getKey(), jsonObj.toString()));
            }
        }

        // check to make sure all required properties/fields are present in the JSON string
        for (String requiredField : GetDailyWorkspaceMTUUsageV1Output.openapiRequiredFields) {
            if (jsonObj.get(requiredField) == null) {
                throw new IllegalArgumentException(
                        String.format(
                                "The required field `%s` is not found in the JSON string: %s",
                                requiredField, jsonObj.toString()));
            }
        }
        // ensure the json data is an array
        if (!jsonObj.get("dailyWorkspaceMTUUsage").isJsonArray()) {
            throw new IllegalArgumentException(
                    String.format(
                            "Expected the field `dailyWorkspaceMTUUsage` to be an array in the JSON"
                                    + " string but got `%s`",
                            jsonObj.get("dailyWorkspaceMTUUsage").toString()));
        }

        JsonArray jsonArraydailyWorkspaceMTUUsage =
                jsonObj.getAsJsonArray("dailyWorkspaceMTUUsage");
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GetDailyWorkspaceMTUUsageV1Output.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GetDailyWorkspaceMTUUsageV1Output' and
                // its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<GetDailyWorkspaceMTUUsageV1Output> thisAdapter =
                    gson.getDelegateAdapter(
                            this, TypeToken.get(GetDailyWorkspaceMTUUsageV1Output.class));

            return (TypeAdapter<T>)
                    new TypeAdapter<GetDailyWorkspaceMTUUsageV1Output>() {
                        @Override
                        public void write(JsonWriter out, GetDailyWorkspaceMTUUsageV1Output value)
                                throws IOException {
                            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                            elementAdapter.write(out, obj);
                        }

                        @Override
                        public GetDailyWorkspaceMTUUsageV1Output read(JsonReader in)
                                throws IOException {
                            JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
                            validateJsonObject(jsonObj);
                            return thisAdapter.fromJsonTree(jsonObj);
                        }
                    }.nullSafe();
        }
    }

    /**
     * Create an instance of GetDailyWorkspaceMTUUsageV1Output given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GetDailyWorkspaceMTUUsageV1Output
     * @throws IOException if the JSON string is invalid with respect to
     *     GetDailyWorkspaceMTUUsageV1Output
     */
    public static GetDailyWorkspaceMTUUsageV1Output fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GetDailyWorkspaceMTUUsageV1Output.class);
    }

    /**
     * Convert an instance of GetDailyWorkspaceMTUUsageV1Output to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}
